<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <IsPackable>false</IsPackable>
        <SpaRoot>..\ClientApp\</SpaRoot>
        <SpaClientUrl>http://localhost:4200</SpaClientUrl>
        <SpaLaunchCommand>npm start</SpaLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
    </PropertyGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="AspNetCore.SpaYarp" Version="2.0.1" />
        <PackageReference Include="BCrypt.Net-Next" Version="4.0.3" />
        <PackageReference Include="FFMpegCore" Version="5.1.0" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="8.0.1" />
        <PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.1" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="8.0.1" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="8.0.1" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="8.0.1" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.1">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <Target Name="WriteSpaConfigurationToDisk" BeforeTargets="AssignTargetPaths">
        <PropertyGroup>
            <_SpaProxyServerLaunchConfig>$(IntermediateOutputPath)spa.proxy.json</_SpaProxyServerLaunchConfig>
            <_SpaRootFullPath>$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '$(SpaRoot)').Replace('\','\\'))</_SpaRootFullPath>
            <SpaProxyTimeoutInSeconds Condition="'$(SpaProxyTimeoutInSeconds)' == ''">120</SpaProxyTimeoutInSeconds>
        </PropertyGroup>
        <ItemGroup>
            <_SpaProxyServerLaunchConfigLines Include="{" />
            <_SpaProxyServerLaunchConfigLines Include="  &quot;SpaProxyServer&quot;: {" />
            <_SpaProxyServerLaunchConfigLines Include="    &quot;ServerUrl&quot;: &quot;$(SpaProxyServerUrl)&quot;," />
            <_SpaProxyServerLaunchConfigLines
                Include="    &quot;LaunchCommand&quot;: &quot;$(SpaProxyLaunchCommand)&quot;," />
            <_SpaProxyServerLaunchConfigLines
                Include="    &quot;WorkingDirectory&quot;: &quot;$(_SpaRootFullPath)&quot;," />
            <_SpaProxyServerLaunchConfigLines
                Include="    &quot;MaxTimeoutInSeconds&quot;: &quot;$(SpaProxyTimeoutInSeconds)&quot;" />
            <_SpaProxyServerLaunchConfigLines Include="  }" />
            <_SpaProxyServerLaunchConfigLines Include="}" />
        </ItemGroup>
        <WriteLinesToFile File="$(_SpaProxyServerLaunchConfig)" Lines="@(_SpaProxyServerLaunchConfigLines)"
                          WriteOnlyWhenDifferent="true" Overwrite="true" />
        <ItemGroup>
            <ContentWithTargetPath Include="$(_SpaProxyServerLaunchConfig)" CopyToOutputDirectory="PreserveNewest"
                                   CopyToPublishDirectory="Never" TargetPath="spa.proxy.json" />
            <FileWrites Include="$(_SpaProxyServerLaunchConfig)" />
        </ItemGroup>
    </Target>
</Project>